# CounselFlow Full Stack Docker Compose
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: counselflow-postgres
    environment:
      POSTGRES_DB: counselflow
      POSTGRES_USER: counselflow
      POSTGRES_PASSWORD: counselflow_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - counselflow-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: counselflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - counselflow-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: counselflow-backend
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://counselflow:counselflow_password@postgres:5432/counselflow
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    networks:
      - counselflow-network
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Next.js Frontend
  frontend:
    build:
      context: ./counselflow-app
      dockerfile: Dockerfile
    container_name: counselflow-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NODE_ENV=development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./counselflow-app:/app
      - /app/node_modules
      - /app/.next
    networks:
      - counselflow-network

  # Nginx (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: counselflow-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - counselflow-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  backend_uploads:

networks:
  counselflow-network:
    driver: bridge
